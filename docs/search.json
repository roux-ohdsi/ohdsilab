[{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/01-intro-to-ohdsilab.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to ohdsilab (start here!)","text":"first step using ohdsilab R, please work code vignette line line. give familiarity setup process querying data. also includes important tips using R ohdsilab, might differ typical workflow using R. ’ll want email received first created box handy, credentials .","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/01-intro-to-ohdsilab.html","id":"starting-a-new-project","dir":"Articles","previous_headings":"","what":"Starting a new project","title":"Introduction to ohdsilab (start here!)","text":"’ve created workspace (.e., virtual computer) ohdsilab dashboard, logged computer Amazon Workspaces App, ’re ready get started using R query database. R Projects {renv} two important (maybe even necessary) steps using R OHDSI Lab. first use project-oriented workflow. ’re new R-projects project-oriented workflow, go read article. can find details projects : https://r4ds..co.nz/workflow-projects.html. second use {renv} manage package versions within R projects. R package, setup guide vignettes assume using two steps. opening RStudio, begin going File select New Project. Give project name select preferred location using browse button. Make sure check box says Use renv project. problem accidentally skip step, can still activate {renv} running renv::activate() first thing new project.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/01-intro-to-ohdsilab.html","id":"installing-packages","dir":"Articles","previous_headings":"","what":"Installing Packages","title":"Introduction to ohdsilab (start here!)","text":"strongly recommend using {renv} R package install ohdsilab packages OHDSI-Lab Box/Workspace. Installing packages without {renv} likely fail due permission restrictions. guide using {renv} : https://rstudio.github.io/renv/articles/renv.html. first thing update renv. , run following code console. , can install ohdsilab package Github like : want also install OHDSI packages (e.g., DatabaseConnector), set dependencies = “Suggests”. recommended unless working AllofUs Researcher workbench packages take install terribly useful AllofUs database setup. can also install update regular packages CRAN: may notice trying install packages without using {renv} results errors indicate don’t permission install R packages. case - free install R packages virtual computer/workspace - use {renv} .","code":"renv::upgrade() renv::install(\"roux-ohdsi/ohdsilab\") renv::install(\"roux-ohdsi/ohdsilab\", dependencies = \"Suggests\") renv::install(\"dplyr\")"},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/01-intro-to-ohdsilab.html","id":"load-the-ohdsilab-package","dir":"Articles","previous_headings":"","what":"Load the ohdsilab package","title":"Introduction to ohdsilab (start here!)","text":"library(ohdsilab) also load {DatabaseConnector}, {keyring}, dependencies, might want explicitly load transparency.","code":"library(ohdsilab) library(tidyverse) library(DatabaseConnector) library(keyring)"},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/01-intro-to-ohdsilab.html","id":"setting-up-your-credentials","dir":"Articles","previous_headings":"","what":"Setting up your credentials","title":"Introduction to ohdsilab (start here!)","text":"two sets credentials ’ll want set make accessing data ATLAS easier. credentials email received first created workspace. First, set credentials amazon redshift database (db). credentials can found email received first launched workspace next “Amazon Redshift Username:” “Amazon Redshift Password:” respectively. following code create pop-enter username password. save username password background can access username password quickly securely. Run code (without editing ): try running following make sure ’s saved. (Notice Getting username rather Setting username.) also set ATLAS credentials, may different redshift database credentials. credentials can also found email received first launchedy workspace next “ATLAS Username:” “ATLAS Password:” respectively.","code":"keyring::key_set(\"db_username\", prompt = \"Redshift Username\") keyring::key_set(\"db_password\", prompt = \"Redshift Password\") keyring::key_get(\"db_username\") keyring::key_set(\"atlas_username\", prompt = \"Atlas username\") keyring::key_set(\"atlas_password\", prompt = \"Atlas password\")"},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/01-intro-to-ohdsilab.html","id":"connecting-to-a-database","dir":"Articles","previous_headings":"","what":"Connecting to a database","title":"Introduction to ohdsilab (start here!)","text":"’ll use {DatabaseConnector} package connect database. also need download Amazon Redshift JDBC driver. , complete following steps within OHDSI Lab Workstation: Navigate Amazon Redshift JDBC download page. Click “JDBC 4.2–compatible driver version 2.1 AWS SDK driver–dependent libraries” start download. Move JDBC zip file directory choosing. Right-click zip file, select “Extract” unzip . start new R script analysis, won’t need re-download drivers store username password (long ohdsilab workspace). fact, don’t need code. can also start script using shortcut function ohdsilab package, thing.","code":"# Schema Information =========================================================== cdm_schema <- \"omop_cdm_53_pmtx_202203\" write_schema <- paste0(\"work_\", keyring::key_get(\"db_username\"))  # Set the path to the JDBC driver you installed above Sys.setenv(\"DATABASECONNECTOR_JAR_FOLDER\" = \"insert path to jdbc driver here\")  # Create the connection con =  DatabaseConnector::connect(   dbms = \"redshift\",   server = \"ohdsi-lab-redshift-cluster-prod.clsyktjhufn7.us-east-1.redshift.amazonaws.com/ohdsi_lab\",   port = 5439,   user = keyring::key_get(\"db_username\"),   password = keyring::key_get(\"db_password\"))  # Test if the connection works if (isTRUE(DatabaseConnector::dbIsValid(con))) print(\"Connected Successfully\")  # make it easier for some r functions to find the database options(con.default.value = con) options(schema.default.value = cdm_schema) options(write_schema.default.value = write_schema) library(ohdsilab) library(DatabaseConnector)  con <- ohdsilab_connect(     username = key_get(\"db_username\"),     password = key_get(\"db_password\") )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/01-intro-to-ohdsilab.html","id":"querying-the-database","dir":"Articles","previous_headings":"","what":"Querying the database","title":"Introduction to ohdsilab (start here!)","text":"ohdsilab pharmetrics database uses amazon redshift SQL OMOP CDM version 5.3. can see information 5.3 OMOP version : https://ohdsi.github.io/CommonDataModel/cdm53.html. database organization looks like (similar OMOP CDM 5.4 - minor differences).  comprehensive diagram information columns tables can found : https://lucid.app/lucidchart/dc75ba24-cbb6-4152-9528-a1f67b4b3843/view?page=0_0&invitationId=inv_d9040d51-a9b0-4d91-b3e5-f2f0ce927cf7# data help database stored cdm schema. can think schema kind like subfolder database. pharmetrics data stored ohdsilab/omop_cdm_53_pmtx_202203/… … indicates table ’re interested . query table pharmetrics might write line code like : code looking concept table pharmetrics schema ohdsilab database. can also see concept table orange box labelled “Standardized Vocabularies” picture . also schema (sometimes called “scratchpad”) can save information pertinent studies. usr999, access table (previously created) like : tables database, can connect together. example, might use {cohortGenerator} generate cohort table schema (“myCohort”). cohort table includes column person_id’s (information) can use reduce giant amount data pharmetrics - usually inner_join. (See https://ohdsi.github.io/CohortGenerator/articles/GeneratingCohorts.html tutorial) Remembering name database schema usr schema can bit annoying. ’s get habit saving schema names variables top scripts, can just reference strings using variables cdm_schema write_schema. might look like : can still quite bit code join. Additionally, known bugs using dplyr *_join functions redshift database isntances. reasons, recommend use ohdsilab::omop_join() function can help streamline code. ’s wrapper dplyr join functions also includes workarounds known bugs backround don’t worry much. works set default connection cdm_schema using ohdsilab_connect() function. didn’t use connection connect, set manually: omop_join() function look defaults first, doesn’t find (didn’t run two lines), let know need provide directly. Note want point omop_join() user scratchpad, need use argument schema = write_schema.’s toy example can put information together. can extract conditions women born 2002. Try run chunks make sure everything working. get error database, often need “rollback” running new command. error tells need “rollback” usually looks like : rollback essentially like going back time world ran chunk code caused error. can easily using ohdsilab, provided ’ve set connection schema default values . synonymous running.","code":"library(dplyr) # for tbl() function # we also have ohdsilab and DatabaseConnector loaded as above # and have created the con object using ohdsilab_connect  tbl(     con,     inDatabaseSchema(\"omop_cdm_53_pmtx_202203\", \"concept\")   ) # note - this wont actually work! the table doesn't exist tbl(     con,     inDatabaseSchema(\"usr999\", \"myCohort\")     ) tbl(     con,     inDatabaseSchema(\"usr999\", \"myCohort\")   ) |>    dplyr::inner_join(     tbl(       con,       inDatabaseSchema(\"omop_cdm_53_pmtx_202203\", \"person\")     ),     by = \"person_id\"   ) cdm_schema <- \"omop_cdm_53_pmtx_202203\" write_schema <- paste0(\"work_\", keyring::key_get(\"db_username\")) tbl(     con,     inDatabaseSchema(write_schema, \"myCohort\")   ) |>    dplyr::inner_join(     tbl(       con,       inDatabaseSchema(cdm_schema, \"person\")     ),     by = \"person_id\"   ) tbl(     con,     inDatabaseSchema(write_schema, \"myCohort\")   ) |>   omop_join(\"person\", type = \"inner\", by = \"person_id\") options(con.default.value = con) options(schema.default.value = cdm_schema) # Start with a pointer to a table in the database. It could be in the cdm_schema # or in your user write_schema. female_2002 <- tbl(con, inDatabaseSchema(cdm_schema, \"person\")) |>      # filter the data for women born in 2002     filter(year_of_birth == 2002, gender_source_value == \"F\") |>      # select only the necessary columns     select(person_id) |>      # join to the condition occurrence table using an inner join     omop_join(\"condition_occurrence\", type = \"inner\", by = \"person_id\") # run to see a preview of the top 10 rows female_2002 # how many rows are in our data? tally(female_2002) Error in `db_query_fields.DBIConnection()`: ! Can't query fields. Caused by error in `.createErrorReport()`: ! Error executing SQL: com.amazon.redshift.util.RedshiftException: ERROR: current transaction is  aborted, commands ignored until end of transaction block An error report has been created at .../errorReportSql.txt Run `rlang::last_trace()` to see where the error occurred. rb() executeSql(con, \"ROLLBACK;\")"},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/01-intro-to-ohdsilab.html","id":"summary","dir":"Articles","previous_headings":"","what":"Summary","title":"Introduction to ohdsilab (start here!)","text":"’re able connect database run basic queries - good go. Next, check articles website. might also want browse Athena (https://athena.ohdsi.org/) start thinking area interest represented OMOP. also lots videos using OMOP CDM youtube (https://www.youtube.com/@OHDSI).","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/02-getting-started-with-box.html","id":"connect-to-northeastern-vpn","dir":"Articles","previous_headings":"","what":"1. Connect to Northeastern VPN","title":"Getting Started with the OHDSI-Lab Box","text":"click connect, send push DUO, make sure click confirm device.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/02-getting-started-with-box.html","id":"load-amazon-workspaces","dir":"Articles","previous_headings":"","what":"2. Load Amazon WorkSpaces","title":"Getting Started with the OHDSI-Lab Box","text":"Open Amazon WorkSpaces laptop log account. registration code included email. may take time start WorkSpace, please patient.  log , receive email OHDSI.  logging , WorkSpace look like .","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/02-getting-started-with-box.html","id":"create-concept-sets","dir":"Articles","previous_headings":"","what":"3. Create concept sets","title":"Getting Started with the OHDSI-Lab Box","text":"Now, can start creating concept sets cohort. try create concept set, recommended open Athena side (https://athena.ohdsi.org/search-terms/start).  Begin search exploring concept desire using Athena. example, want create concept set related “aspirin”, can begin searching “aspirin” Athena.  comprehensive list items , make process manageable, let’s start focusing [standard concept]. don’t find ’re looking within category, can expand search include items later . approach help streamline workload ensure cover everything effectively.  Now, let’s click first item view details. Additionally, option select ‘hierarchy’ explore related parent children concepts. give better understanding may want include. brief idea, can proceed ATLAS.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/02-getting-started-with-box.html","id":"move-on-to-atlas","dir":"Articles","previous_headings":"","what":"4. Move on to ATLAS","title":"Getting Started with the OHDSI-Lab Box","text":"can open OHDSI ATLAS sign account, using user name password given email.  begin clicking “New Concept Set”.  type concept name, click save button. go “search”, type item want. Notice, creating concept set, cart symbol next Concept Set green. ATLAS, two search options: can either search using concept ID obtained Athena, can directly search term like ‘Aspirin’ case. ’s important note layout order items may vary Athena ATLAS.  can also choose Standard Concept . can sort results DRC (descendant record count) RC (record count). click item, can see hierarchy.  can choose item, children concepts, think also need , can also click Descendants option, add concept. items don’t want include, can choose Exclude option. can click save button .  item want include, can go back search. Otherwise, click close button. Now, already successfully created concept set.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/articles/02-getting-started-with-box.html","id":"other-resources","dir":"Articles","previous_headings":"","what":"Other Resources","title":"Getting Started with the OHDSI-Lab Box","text":"recommend watch following videos details concept sets cohort: https://youtu./mfjxNwn3KkM https://youtu./2_JsAAFExMU https://youtu./JQFGedOaNiw","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Louisa Smith. Author. Rob Cavanaugh. Author, maintainer.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Smith L, Cavanaugh R (2025). ohdsilab: ohdsilab: useful R functions Roux ohdsilab Northeastern University. R package version 0.1.0, https://github.com/roux-ohdsi/ohdsilab, https://roux-ohdsi.github.io/ohdsilab/.","code":"@Manual{,   title = {ohdsilab: ohdsilab: useful R functions for the Roux ohdsilab at Northeastern University},   author = {Louisa Smith and Rob Cavanaugh},   year = {2025},   note = {R package version 0.1.0, https://github.com/roux-ohdsi/ohdsilab},   url = {https://roux-ohdsi.github.io/ohdsilab/}, }"},{"path":"https://roux-ohdsi.github.io/ohdsilab/index.html","id":"ohdsilab-tools-for-using-roux-ohdsi-lab-at-northeastern-university","dir":"","previous_headings":"","what":"ohdsilab: Tools for using Roux OHDSI Lab at Northeastern University","title":"ohdsilab: useful R functions for the Roux ohdsilab at Northeastern University","text":"goals ohdsilab R package two fold: Streamline working OHDSI-Lab database Roux Institute (OMOP CDM databases) Provide easier -ramp students researchers new working OMOP CDM SQL databases. package contains functions template code snippets facilitate easier use OHDSI-Lab. functions snippets build existing OHDSI R packages like {DatabaseConnector} well standard R packages like {dplyr} {tidyr}. package also contains number vingettes intended R users new OHDSI-Lab, OMOP CDM, working data SQL databases R. ’re new OHDSI-Lab user, ’ve created workspace successfully logged , finish setting R environment completing setup tutorial","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/index.html","id":"an-important-note-on-storage","dir":"","previous_headings":"ohdsilab: Tools for using Roux OHDSI Lab at Northeastern University","what":"An important note on storage","title":"ohdsilab: useful R functions for the Roux ohdsilab at Northeastern University","text":"OHDSI Lab Workspace intended resource compute. intended permanent storage. recommend saving scripts permanently workspace without backing elsewhere. best practice use version control system saving code results location workspace. recommend using git github purpose. Storage workspace considered temporary location long-term storage. Thankfully, connecting git github R now quite easy. Follow steps Happy Git R chapter 9 connect github account RStudio. using git github can complex, single user (!), ’s simple knowing four commands: Information commands can found Happy Git R chapter 21. , visual explanation, see fantastic illustrations Allison Horst.","code":"git pull git add . git commit -m \"this is a message about the changes you made\" git push"},{"path":"https://roux-ohdsi.github.io/ohdsilab/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ohdsilab authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_bucket_to_workspace.html","id":null,"dir":"Reference","previous_headings":"","what":"Move files from a bucket to your workspace — aou_bucket_to_workspace","title":"Move files from a bucket to your workspace — aou_bucket_to_workspace","text":"step retrieves file saved permanently bucket workspace can read R using function like write.csv().","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_bucket_to_workspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move files from a bucket to your workspace — aou_bucket_to_workspace","text":"","code":"aou_bucket_to_workspace(files, bucket_name = Sys.getenv(\"WORKSPACE_BUCKET\"))"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_bucket_to_workspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move files from a bucket to your workspace — aou_bucket_to_workspace","text":"files name file bucket vector multiple files. bucket_name Name bucket. Recommend leaving default","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to big query database in All of Us — aou_connect","title":"Connect to big query database in All of Us — aou_connect","text":"use, simply run function without arguments. print message connect successfully. also assign bucket object R environment.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to big query database in All of Us — aou_connect","text":"","code":"aou_connect(bucket_name = \"bucket\")"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to big query database in All of Us — aou_connect","text":"bucket_name variable name bucket. Recommend leaving default.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_ls_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"List the current files in your bucket. — aou_ls_bucket","title":"List the current files in your bucket. — aou_ls_bucket","text":"List current files bucket.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_ls_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the current files in your bucket. — aou_ls_bucket","text":"","code":"aou_ls_bucket(pattern = \"*.csv\", bucket_name = Sys.getenv(\"WORKSPACE_BUCKET\"))"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_ls_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the current files in your bucket. — aou_ls_bucket","text":"pattern pattern like *.csv single file name e.g., mydata.csv bucket_name name bucket. Recommend leaving default description Quick function list files matching pattern bucket","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_ls_workspace.html","id":null,"dir":"Reference","previous_headings":"","what":"List the current files in your workspace. — aou_ls_workspace","title":"List the current files in your workspace. — aou_ls_workspace","text":"List current files workspace.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_ls_workspace.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List the current files in your workspace. — aou_ls_workspace","text":"","code":"aou_ls_workspace(pattern = \"*.csv\")"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_ls_workspace.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List the current files in your workspace. — aou_ls_workspace","text":"pattern pattern like *.csv single file name e.g., mydata.csv description Quick function list files matching pattern workspace","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"Get occurrences concepts AoU given cohort","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"","code":"aou_pull_concepts(   cohort,   concepts,   start_date,   end_date,   concept_set_name = \"concepts\",   domains = c(\"condition\", \"measurement\", \"observation\", \"procedure\", \"drug\", \"device\"),   min_n = NULL,   n = FALSE,   keep_all = FALSE,   con = getOption(\"con.default.value\"),   collect = TRUE,   ... )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"cohort tbl; reference table column called \"person_id\", columns start_date end_date concepts num; vector concept ids start_date name start_date column cohort table (unquoted) end_date name end_date column cohort table (unquoted) concept_set_name chr; Name describe concept set, used create indicator variable min_n dbl; minimum number occurrences per person consider indicator true n dbl; count number occurrences per person (include zeros) keep_all lgl; keep columns information concept (e.g., concept name, id, etc.) con connection object AoU collect lgl; whether collect database","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"dataframe collect = TRUE; remote tbl ","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get occurrences of a concepts from AoU for a given cohort — aou_pull_concepts","text":"","code":"if (FALSE) { # \\dontrun{ tobacco <- pull_concepts(cohort, concepts = 1157, start_date = covariate_start_date,  end_date = cohort_start_date, name = \"tobacco\")  } # }"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_survey_concepts.html","id":null,"dir":"Reference","previous_headings":"","what":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"Get survey questions AoU given cohort","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_survey_concepts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"","code":"aou_pull_survey_concepts(   cohort,   concepts,   collect = TRUE,   reshape = FALSE,   ... )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_survey_concepts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"cohort tbl; reference table column called \"person_id\" concepts num; vector concept ids questions survey table collect lgl; whether collect database reshape lgl; whether turn long data wide data clean variable names","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_survey_concepts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"reshape = FALSE, dataframe remote tbl columns person_id, date (survey_datetime),  concept_id (question_concept_id), question, answer. reshape = TRUE, dataframe  questions columns. multiple answers per person (\"checkbox\" questions) list-columns.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_pull_survey_concepts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get survey questions from AoU for a given cohort — aou_pull_survey_concepts","text":"","code":"if (FALSE) { # \\dontrun{ survey_data <- aou_pull_survey_concepts(cohort, concepts = c(1157, 124839), reshape = TRUE) } # }"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_workspace_to_bucket.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a file from your workspace to your bucket. — aou_workspace_to_bucket","title":"Save a file from your workspace to your bucket. — aou_workspace_to_bucket","text":"step permanently saves file saved workspace bucket can always retrieve . use, first need save desired r object file (e.g., write.csv(object, filename.csv)) run function (e.g., aou_workspace_to_bucket(files = \"filename.csv\")).","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_workspace_to_bucket.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a file from your workspace to your bucket. — aou_workspace_to_bucket","text":"","code":"aou_workspace_to_bucket(files, bucket_name = Sys.getenv(\"WORKSPACE_BUCKET\"))"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/aou_workspace_to_bucket.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a file from your workspace to your bucket. — aou_workspace_to_bucket","text":"files name file save bucket_name name bucket. Recommend leaving default","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/bookstore.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to Install and Load R Packages — bookstore","title":"Function to Install and Load R Packages — bookstore","text":"Function Install Load R Packages","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/bookstore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to Install and Load R Packages — bookstore","text":"","code":"bookstore(package_names, quietly = TRUE)"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/bookstore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to Install and Load R Packages — bookstore","text":"package_names character vector package names CRAN github description bookstore() function check see packages provided already installed local machine. installed, look package CRAN install found. find package CRAN, 'll ask owner/repository_name github install package github. input provided without quotes. example, respond roux-ohdsi/ohdsilab \"roux-ohdsi/ohdsilab\".","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/bookstore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to Install and Load R Packages — bookstore","text":"","code":"if (FALSE) { # \\dontrun{ bookstore(c(\"aouFI\", \"CohortGenerator\", \"tidyr\")) } # }"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/dbi_collect.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect using the DBI package — dbi_collect","title":"Collect using the DBI package — dbi_collect","text":"Collect using DBI package","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/dbi_collect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect using the DBI package — dbi_collect","text":"","code":"dbi_collect(query, connection = getOption(\"con.default.value\"))"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/dbi_collect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect using the DBI package — dbi_collect","text":"query sql query built dbplyr connection connection db. can leave blank set using options","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/dbi_collect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect using the DBI package — dbi_collect","text":"collected dataframe","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd2omop.html","id":null,"dir":"Reference","previous_headings":"","what":"icd2omop — icd2omop","title":"icd2omop — icd2omop","text":"icd2omop","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd2omop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"icd2omop — icd2omop","text":"","code":"icd2omop(   codes,   source_wildcard = \"x\",   dbms_wildcard = \"%\",   translate_from = \"ICD9CM\",   collect = TRUE,   overwrite = TRUE,   con = getOption(\"con.default.value\"),   cdm_schema = getOption(\"cdm_schema.default.value\"),   ... )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd2omop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"icd2omop — icd2omop","text":"codes vector source codes without wildcards source_wildcard wildcard indicator source codes. example code R47.x, put \"x\" dbms_wildcard wildcard indicator dbms LIKE function. translate_from source vocabulary, e.g., ICD9CM ICD10CM. Make sure enter way included concept table collect whether execute query. defaults TRUE overwrite whether overwrite temp table created course query (#temp). defaults TRUE con connection object database. defaults option \"con.default.value\" cdm_schema schema containing CDM. defaults option \"cdm_schema.default.value\"","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd2omop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"icd2omop — icd2omop","text":"dataframe target source codes, original codes wildcard (`orig_code`). collect = FALSE, reference SQL query.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd2omop2.html","id":null,"dir":"Reference","previous_headings":"","what":"icd2omop2 — icd2omop2","title":"icd2omop2 — icd2omop2","text":"function find exact ICD matches. faster icd2omop() need use join find wildcards. also return match beginning icd codes however. important check codes searched found match","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd2omop2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"icd2omop2 — icd2omop2","text":"","code":"icd2omop2(   db_con,   codes,   cdm_schema = NULL,   icd_wildcard = \"x\",   dbms_wildcard = \"%\",   translate_from = \"ICD9CM\",   translate_to = \"SNOMED\" )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd2omop2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"icd2omop2 — icd2omop2","text":"db_con database connection object codes vector ICD codes without wildcards cdm_schema name CDM schema icd_wildcard wordcard indicator icd codes. example code R47.x, put \"x\" dbms_wildcard wildcard indicator dbms SIMILAR function. translate_from ICD codes start translate_to codes transfer get omop. usually SNOMED","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd2omop2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"icd2omop2 — icd2omop2","text":"dataframe icd, SNOMED, OMOP concept codes","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd_periods.html","id":null,"dir":"Reference","previous_headings":"","what":"Add periods to icd numbers — icd_periods","title":"Add periods to icd numbers — icd_periods","text":"Useful icd9 numbers come without periods","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd_periods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add periods to icd numbers — icd_periods","text":"","code":"icd_periods(data, icd_column, overwrite = TRUE)"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd_periods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add periods to icd numbers — icd_periods","text":"data dataframe tibble icd_column name column fix overwrite whether overwrite supplied column add new one","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/icd_periods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add periods to icd numbers — icd_periods","text":"dataframe overwriting column icd9","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/insertTable_chunk.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert a table to your user schema in chunks because speed and bugs — insertTable_chunk","title":"Insert a table to your user schema in chunks because speed and bugs — insertTable_chunk","text":"Insert table user schema chunks speed bugs","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/insertTable_chunk.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert a table to your user schema in chunks because speed and bugs — insertTable_chunk","text":"","code":"insertTable_chunk(   data,   table_name,   n = 100,   overwrite = TRUE,   con = getOption(\"con.default.value\"),   write_schema = getOption(\"write_schema.default.value\"),   ... )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/insertTable_chunk.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert a table to your user schema in chunks because speed and bugs — insertTable_chunk","text":"data data want write user schema table_name name table want write database n number chunks split. defaults 100. Aim < 200 rows per chunk right now. overwrite want overwrite existing table name? con connection. defaults set option done. ... additional arguments passed along DatabaseConnector::insertTable user_schema user schema. defaults set option done","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/insertTable_chunk.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert a table to your user schema in chunks because speed and bugs — insertTable_chunk","text":"","code":"if (FALSE) { # \\dontrun{ options(con.default.value = con) write_schema = paste0(\"work_\", keyring::key_get(\"db_username\")) insertTable_chunk(data = data, table_name = \"table1\", n = 50, overwrite = TRUE, user_schema = write_schema) } # }"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/lab_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new project — lab_project","title":"Create a new project — lab_project","text":"Create new project","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/lab_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new project — lab_project","text":"","code":"lab_project(path, ...)"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/map2omop.html","id":null,"dir":"Reference","previous_headings":"","what":"map2omop — map2omop","title":"map2omop — map2omop","text":"translates codes omop concept ID long direct mapping concept table","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/map2omop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"map2omop — map2omop","text":"","code":"map2omop(   db_con,   codes,   cdm_schema = NULL,   collect = TRUE,   translate_from = \"CPT4\" )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/map2omop.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"map2omop — map2omop","text":"db_con database connection object codes vector CPT4 codes cdm_schema name CDM schema collect whether return dataframe (default) sql query (Set FALSE) translate_from vocab translate . Can vector e.g., c(\"CPT4\", \"HCPCS\")","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/map2omop.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"map2omop — map2omop","text":"dataframe icd, SNOMED, OMOP concept codes","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/ohdsilab_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to the ohdsilab redshift database — ohdsilab_connect","title":"Connect to the ohdsilab redshift database — ohdsilab_connect","text":"Helper function connect ohdsilab OMOP database. need supply redshift username password (received email first set workspace). location CDM schema set default. function also set default values user schema, cdm schema, connection object, used functions ohdsilab package. can found running getOption(\"con.default.value\"), getOption(\"schema.default.value\"), getOption(\"write_schema.default.value\").","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/ohdsilab_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to the ohdsilab redshift database — ohdsilab_connect","text":"","code":"ohdsilab_connect(username, password, cdm_schema = \"omop_cdm_53_pmtx_202203\")"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/ohdsilab_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to the ohdsilab redshift database — ohdsilab_connect","text":"username redshift username (required) password redshift password (required) cdm_schema omop cdm schema (set default)","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/ohdsilab_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to the ohdsilab redshift database — ohdsilab_connect","text":"connection object","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/ohdsilab_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to the ohdsilab redshift database — ohdsilab_connect","text":"","code":"if (FALSE) { # \\dontrun{ con <- ohdsilab_connect(     username = keyring::key_get(\"db_username\"),     password = keyring::key_get(\"db_password\")     ) } # }"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/omop_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join current query to another omop table — omop_join","title":"Join current query to another omop table — omop_join","text":"Simple wrapper join functions join existing query another table omop cdm (source).","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/omop_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join current query to another omop table — omop_join","text":"","code":"omop_join(   data,   table,   type,   by,   suffix = c(\"_x\", \"_y\"),   con = getOption(\"con.default.value\"),   schema = NULL,   x_as = NULL,   y_as = NULL,   ... )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/omop_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join current query to another omop table — omop_join","text":"data sql query dbplyr/dplyr. function works pipes! table omop table (table schema) wish join type type join. use types available dplyr: left, right, inner, anti, full etc. con defaults connection set options() schema defaults schema set options() x_as optional; string name left table y_as optional; string name right table ... arguments passed join function. e.g., = \"person_id\"","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/omop_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join current query to another omop table — omop_join","text":"Continued dplyr query","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/omop_join.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join current query to another omop table — omop_join","text":"using omop_join ohdsi_lab, include following two lines top script setting schema connection, con refers connection generated DatabaseConnector::connect() cdm_schema points cdm_schema pharmetrics. provide provide alternative schema, see . options(con.default.value = con) options(schema.default.value = cdm_schema) good reasons use omop_join() possible x_join functions dplyr. First, reduces code necessary join existing table another table. Second, includes checks/workarounds two sources common errors using dplyr DatabaseConnector: automatically appends x_as y_as arguments join call provided changes default suffix .x/.y _x/_y cases shared column names specified argument result sql error. omop_join() can also used join tables schema - simply set schema argument preferred schema (whereas otherwise just looks default).","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/omop_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join current query to another omop table — omop_join","text":"","code":"options(con.default.value = con) #> Error: object 'con' not found options(schema.default.value = cdm_schema) #> Error: object 'cdm_schema' not found obs_tbl |>   omop_join(\"person\", type = \"left\", by = \"person_id\") #> Error in omop_join(obs_tbl, \"person\", type = \"left\", by = \"person_id\"): Provide `con` as an argument or default with `options(con.default.value = ...)`"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pull_concept_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Get occurrences of of a concept set from ATLAS for a given cohort — pull_concept_set","title":"Get occurrences of of a concept set from ATLAS for a given cohort — pull_concept_set","text":"Get occurrences concept set ATLAS given cohort","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pull_concept_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get occurrences of of a concept set from ATLAS for a given cohort — pull_concept_set","text":"","code":"pull_concept_set(   cohort,   concept_set_id,   start_date,   end_date,   concept_set_name = NULL,   min_n = NULL,   n = FALSE,   keep_all = FALSE,   con = getOption(\"con.default.value\"),   atlas_url = getOption(\"atlas_url.default.value\"),   write_schema = getOption(\"write_schema.default.value\"),   ... )"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pull_concept_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get occurrences of of a concept set from ATLAS for a given cohort — pull_concept_set","text":"cohort tbl; reference table created user schema column called \"person_id\", columns start_date end_date concept_set_id num; number associated concept_set_id ATLAS start_date name start_date column cohort table (unquoted) end_date name end_date column cohort table (unquoted) concept_set_name chr; Name describe concept set, used create indicator variable min_n dbl; minimum number occurrences per person consider indicator true n dbl; count number occurrences per person (include zeros) keep_all lgl; keep columns information concept (e.g., concept name, id, etc.) con connection object ohdsilab atlas_url chr; base url ATLAS (ohdsilab) write_schema chr; schema user","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pull_concept_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get occurrences of of a concept set from ATLAS for a given cohort — pull_concept_set","text":"dataframe","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/pull_concept_set.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get occurrences of of a concept set from ATLAS for a given cohort — pull_concept_set","text":"","code":"if (FALSE) { # \\dontrun{ tobacco <- pull_concepts(cohort, concept_set_id = 1157, start_date = covariate_start_date,  end_date = cohort_start_date, name = \"tobacco\"  )} # }"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/rb.html","id":null,"dir":"Reference","previous_headings":"","what":"Shortcut to rollback in the case of a redshift error — rb","title":"Shortcut to rollback in the case of a redshift error — rb","text":"Shortcut rollback case redshift error","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/rb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shortcut to rollback in the case of a redshift error — rb","text":"","code":"rb(con = getOption(\"con.default.value\"))"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/rb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shortcut to rollback in the case of a redshift error — rb","text":"con defaults default connection session. either set using options supplied directly","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/rb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shortcut to rollback in the case of a redshift error — rb","text":"nothing","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/rb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shortcut to rollback in the case of a redshift error — rb","text":"","code":"if (FALSE) rb() # \\dontrun{}"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/seedQuery.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute a query with a seed for reproducibility — seedQuery","title":"Execute a query with a seed for reproducibility — seedQuery","text":"Execute query seed reproducibility","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/seedQuery.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute a query with a seed for reproducibility — seedQuery","text":"","code":"seedQuery(query, seed, con = getOption(\"con.default.value\"))"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/seedQuery.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute a query with a seed for reproducibility — seedQuery","text":"query SQL query generated dplyr seed seed like set - value 0 1, inclusive con connection redshift server ohdsilab.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/set_seed.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a seed for reproducibility — set_seed","title":"Set a seed for reproducibility — set_seed","text":"Set seed reproducibility","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/set_seed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a seed for reproducibility — set_seed","text":"","code":"set_seed(seed, con = getOption(\"con.default.value\"))"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/set_seed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a seed for reproducibility — set_seed","text":"seed seed like set - value 0 1, inclusive con connection redshift server ohdsilab.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/str_insert.html","id":null,"dir":"Reference","previous_headings":"","what":"Insert string — str_insert","title":"Insert string — str_insert","text":"Useful inserting periods icd9 codes come without.","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/str_insert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Insert string — str_insert","text":"","code":"str_insert(x, pos, insert)"},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/str_insert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Insert string — str_insert","text":"x character character vector pos position string insert insert insert","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/str_insert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Insert string — str_insert","text":"character inserted string","code":""},{"path":"https://roux-ohdsi.github.io/ohdsilab/reference/str_insert.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Insert string — str_insert","text":"","code":"str_insert(\"100\", 2, \".\") #> [1] \"10.0\""}]
